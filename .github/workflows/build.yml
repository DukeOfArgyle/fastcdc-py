name: build

on:
  push:
    branches:
      - master

jobs:

  build-linux-cp36:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64

    steps:
    - uses: actions/checkout@master

    - name: Install Python package dependencies
      run: |
        /opt/python/cp36-cp36m/bin/python -m pip install poetry
        /opt/python/cp36-cp36m/bin/python -m poetry install --extras "cython hashes"

    - name: Build binary wheel
      run: /opt/python/cp36-cp36m/bin/python -m poetry build -f wheel

    - name: Apply auditwheel
      run: auditwheel repair -w dist dist/*

    - name: Remove linux wheel
      run: rm dist/*-linux_x86_64.whl

    - name: Archive dist artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-linux-3.5
        path: dist

  build-linux-cp37:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64

    steps:
    - uses: actions/checkout@master

    - name: Install Python package dependencies
      run: |
        /opt/python/cp37-cp37m/bin/python -m pip install poetry
        /opt/python/cp37-cp37m/bin/python -m poetry install --extras "cython hashes"

    - name: Build binary wheel
      run: /opt/python/cp37-cp37m/bin/python -m poetry build -f wheel

    - name: Apply auditwheel
      run: auditwheel repair -w dist dist/*

    - name: Remove linux wheel
      run: rm dist/*-linux_x86_64.whl

    - name: Archive dist artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-linux-3.6
        path: dist

  build-linux-cp38:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64

    steps:
    - uses: actions/checkout@master

    - name: Install Python package dependencies
      run: |
        /opt/python/cp38-cp38m/bin/python -m pip install poetry
        /opt/python/cp38-cp38m/bin/python -m poetry install --extras "cython hashes"

    - name: Build binary wheel
      run: /opt/python/cp38-cp38m/bin/python -m poetry build -f wheel

    - name: Apply auditwheel
      run: auditwheel repair -w dist dist/*

    - name: Remove linux wheel
      run: rm dist/*-linux_x86_64.whl

    - name: Archive dist artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-linux-3.7
        path: dist

  build-macos:
    runs-on: macos-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@master

    - name: Set up Python ${{ matrix.python-version }} x64
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Install Python package dependencies
      run: |
        pip install poetry
        poetry install --extras "cython hashes"

    - name: Build binary wheel
      run: poetry build -f wheel

    - name: Archive dist artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-macos-${{ matrix.python-version }}
        path: dist

  build-windows:
    runs-on: windows-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@master

    - name: Download Build Tools for Visual Studio 2019
      run: Invoke-WebRequest -Uri https://aka.ms/vs/16/release/vs_buildtools.exe -OutFile vs_buildtools.exe

    - name: Run vs_buildtools.exe install
      run: ./vs_buildtools.exe --quiet --wait --norestart --nocache --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.VC.v141.x86.x64 --add Microsoft.VisualStudio.Component.VC.140 --includeRecommended

    - name: Set up Python ${{ matrix.python-version }} x64
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Install Python package dependencies
      run: |
        pip install poetry
        poetry install --extras "cython hashes"

    - name: Build binary wheel
      run: poetry build -f wheel

    - name: Archive dist artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-windows-${{ matrix.python-version }}
        path: dist
